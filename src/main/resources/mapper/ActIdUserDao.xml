<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.jackieonway.activiti.dao.ActIdUserDao">
  <resultMap id="BaseResultMap" type="com.github.jackieonway.activiti.entity.ActIdUser">
    <id column="ID_" jdbcType="VARCHAR" property="id" />
    <result column="REV_" jdbcType="INTEGER" property="rev" />
    <result column="FIRST_" jdbcType="VARCHAR" property="first" />
    <result column="LAST_" jdbcType="VARCHAR" property="last" />
    <result column="EMAIL_" jdbcType="VARCHAR" property="email" />
    <result column="PWD_" jdbcType="VARCHAR" property="pwd" />
    <result column="PICTURE_ID_" jdbcType="VARCHAR" property="pictureId" />
    <result column="TENANT_ID" jdbcType="VARCHAR" property="tenantId" />
  </resultMap>
  <sql id="Base_Column_List">
    ID_, REV_, FIRST_, LAST_, EMAIL_, PWD_, PICTURE_ID_, TENANT_ID
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from act_id_user
    where ID_ = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from act_id_user
    where ID_ = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" keyColumn="ID_" keyProperty="id" parameterType="com.github.jackieonway.activiti.entity.ActIdUser" useGeneratedKeys="true">
    insert into act_id_user (REV_, FIRST_, LAST_, 
      EMAIL_, PWD_, PICTURE_ID_, 
      TENANT_ID)
    values (#{rev,jdbcType=INTEGER}, #{first,jdbcType=VARCHAR}, #{last,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{pwd,jdbcType=VARCHAR}, #{pictureId,jdbcType=VARCHAR}, 
      #{tenantId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="ID_" keyProperty="id" parameterType="com.github.jackieonway.activiti.entity.ActIdUser" useGeneratedKeys="true">
    insert into act_id_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="rev != null">
        REV_,
      </if>
      <if test="first != null">
        FIRST_,
      </if>
      <if test="last != null">
        LAST_,
      </if>
      <if test="email != null">
        EMAIL_,
      </if>
      <if test="pwd != null">
        PWD_,
      </if>
      <if test="pictureId != null">
        PICTURE_ID_,
      </if>
      <if test="tenantId != null">
        TENANT_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="rev != null">
        #{rev,jdbcType=INTEGER},
      </if>
      <if test="first != null">
        #{first,jdbcType=VARCHAR},
      </if>
      <if test="last != null">
        #{last,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null">
        #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="pictureId != null">
        #{pictureId,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        #{tenantId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.github.jackieonway.activiti.entity.ActIdUser">
    update act_id_user
    <set>
      <if test="rev != null">
        REV_ = #{rev,jdbcType=INTEGER},
      </if>
      <if test="first != null">
        FIRST_ = #{first,jdbcType=VARCHAR},
      </if>
      <if test="last != null">
        LAST_ = #{last,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        EMAIL_ = #{email,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null">
        PWD_ = #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="pictureId != null">
        PICTURE_ID_ = #{pictureId,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null">
        TENANT_ID = #{tenantId,jdbcType=VARCHAR},
      </if>
    </set>
    where ID_ = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.github.jackieonway.activiti.entity.ActIdUser">
    update act_id_user
    set REV_ = #{rev,jdbcType=INTEGER},
      FIRST_ = #{first,jdbcType=VARCHAR},
      LAST_ = #{last,jdbcType=VARCHAR},
      EMAIL_ = #{email,jdbcType=VARCHAR},
      PWD_ = #{pwd,jdbcType=VARCHAR},
      PICTURE_ID_ = #{pictureId,jdbcType=VARCHAR},
      TENANT_ID = #{tenantId,jdbcType=VARCHAR}
    where ID_ = #{id,jdbcType=VARCHAR}
  </update>
</mapper>